@{
    Layout = null;
}





@* <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DotNet 6 Projesi Tanıtımı</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            width: 100%;
            text-align: left;
            margin: auto;
        }

        h1, h2, p {
            color: #333;
            margin-bottom: 15px;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        a {
            color: #3498db;
            text-decoration: none;
            font-weight: bold;
        }

            a:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>

    <div class="container">
        <h1>DotNet 6 ile Geliştirilmiş Ürün ve Çalışan Yönetim Sistemi</h1>

        <p>Merhaba! Size yepyeni bir web deneyimi sunmak için hazırladığım bu projeyi tanıtmaktan mutluluk duyuyorum. DotNet 6 teknolojisiyle geliştirilmiş bu sistem, işletmelerin ürün ve çalışan yönetimini, fatura kesimini ve e-posta gönderimini kolaylaştırmayı hedefleyen bir çözümdür.</p>

        <h2>Temel Özellikler:</h2>
        <ul>
            <li>Ürün Yönetimi</li>
            <li>Çalışan Yönetimi</li>
            <li>Cookie İşlemleri</li>
            <li>Role İşlemleri</li>
            <li>Fatura Kesme</li>
            <li>E-Posta Gönderimi</li>
        </ul>

        <h2>Teknolojik Altyapı:</h2>
        <p>Proje, Microsoft'un güçlü ve yenilikçi teknolojisi olan DotNet 6 ile yazılmıştır. Bu, sisteminizin güncel ve performanslı olmasını sağlar.</p>

        <h2>Katmanlı Mimari ve Dependency Injection:</h2>
        <p>Projemiz, n katmanlı bir mimari yapısını benimsemekte ve Dependency Injection prensiplerini kullanmaktadır. Bu, kodunuzun daha modüler, sürdürülebilir ve genişletilebilir olmasını sağlar. Her katman, belirli bir sorumluluğu üstlenir ve bağımsızdır, bu da geliştirme süreçlerinizi optimize eder ve bakımı kolaylaştırır.</p>

        <h2>Code First Yaklaşımı:</h2>
        <p>Projemiz, Entity Framework Core'un "Code First" yaklaşımını benimsemektedir. Veritabanı şemalarını, .NET sınıfları üzerinden kodlayarak oluşturmak, güncellemek ve yönetmek projemizi esnek ve veritabanı ile uyumlu hale getirir. Bu, yazılım geliştirme süreçlerinizi hızlandırır ve veritabanı yönetimini kolaylaştırır.</p>

        <p>Bu proje, ürün ve çalışan yönetiminden fatura kesimine, kullanıcı rollerinden e-posta gönderimine kadar birçok önemli işlevi bir araya getirerek işletmelerin iş süreçlerini optimize etmeyi amaçlamaktadır. DotNet 6 ile geliştirilen bu sistem, modern teknoloji ile iş süreçlerinizi hızlandırmanıza ve daha verimli hale getirmenize yardımcı olacaktır.</p>
    </div>

</body>
</html>
 *@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DotNet 6 Projesi Tanıtımı</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            width: 100%;
            text-align: left;
            margin: auto;
        }

        h1, h2, h3, p {
            color: #333;
            margin-bottom: 15px;
            margin-left: 0;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        a {
            color: #3498db;
            text-decoration: none;
            font-weight: bold;
        }

            a:hover {
                text-decoration: underline;
            }

        #anasayfa-link {
            position: absolute;
            top: 20px;
            left: 20px;
            text-decoration: none;
            color: red;
            font-weight: bold;
            font-size: 1.2em;
        }

            #anasayfa-link:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>
    <a id="anasayfa-link" asp-action="Index" asp-controller="Home">Ana Sayfa</a>
    <div class="container">
        <h1>DotNet 6 ile Geliştirilmiş Ürün ve Çalışan Yönetim Sistemi</h1>

        <p>Merhaba! DotNet 6 teknolojisiyle geliştirilmiş bu sistem, işletmelerin ürün ve çalışan yönetimini, fatura kesimini ve e-posta gönderimini kolaylaştırmayı hedefleyen bir çözümdür.</p>

        <h2>Temel Özellikler:</h2>
        <ul>
            <li>Ürün Yönetimi</li>
            <li>Çalışan Yönetimi</li>
            <li>Cookie İşlemleri</li>
            <li>Role İşlemleri</li>
            <li>Fatura Kesme (isteğe bağlı e-posta gönderimi)</li>
            <li>E-Posta Gönderimi</li>
        </ul>

        <h2>Teknolojik Altyapı:</h2>
        <p>Proje, Microsoft'un güçlü ve yenilikçi teknolojisi olan DotNet 6 ile yazılmıştır. Bu, sistemin güncel ve performanslı olmasını sağlar.</p>

        <h2>Katmanlı Mimari ve Dependency Injection:</h2>
        <p>Projem, n katmanlı bir mimari yapısını benimsemekte ve Dependency Injection prensiplerini kullanmaktadır. Bu, kodumuzun daha modüler, sürdürülebilir ve genişletilebilir olmasını sağlar. Her katman, belirli bir sorumluluğu üstlenir ve bağımsızdır, bu da geliştirme süreçlerinizi optimize eder ve bakımı kolaylaştırır.</p>

        <h2>Code First Yaklaşımı:</h2>
        <p>Projem, Entity Framework Core'un "Code First" yaklaşımını benimsemektedir. Veritabanı şemalarını, .NET sınıfları üzerinden kodlayarak oluşturmak, güncellemek ve yönetmek projemi esnek ve veritabanı ile uyumlu hale getirir. Bu, yazılım geliştirme süreçlerinizi hızlandırır ve veritabanı yönetimini kolaylaştırır.</p>
       
        <h2>Gmail API Kullanımı:</h2>
        <p>Projem, Gmail API kullanarak e-posta gönderim işlemlerini gerçekleştiriyor. Bu, projenin otomatik e-posta gönderme yeteneğini sağlar.</p>

        <h3>Proje Detayları:</h3>
        <p>Bu proje, ürün ve çalışan yönetiminden fatura kesimine, kullanıcı rollerinden e-posta gönderimine kadar birçok önemli işlevi bir araya getirerek işletmelerin iş süreçlerini optimize etmeyi amaçlamaktadır. DotNet 6 ile geliştirilen bu sistem, modern teknoloji ile iş süreçlerinizi hızlandırmanıza ve daha verimli hale getirmenize yardımcı olacaktır.</p>
    </div>

</body>
</html>
